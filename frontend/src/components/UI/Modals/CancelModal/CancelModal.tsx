import { useState } from 'react';
import type { Role } from '../../../../models/Auth';
import type { Consultation } from '../../../../models/consultations/Consultation';
import { formatDateWithoutYear } from '../../../../helpers/formatDatePhone';
import './CancelModal.scss'

export interface ModalProps {
    isOpen: boolean;
    onClose: () => void;
    consultationData: Consultation;
}

interface CancelModalProps extends ModalProps {
    onRecord: (reasons: string, id: number, userId: number) => void;
    mode?: Role;
    userId: number;
}

const CancelModal: React.FC<CancelModalProps> = ({ isOpen, onClose, onRecord, consultationData, mode, userId }) => {
    const [reasons, setReasons] = useState<string>("");

    // –û—Ç–º–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    const handleSubmit = () => {
        onRecord(reasons, consultationData.id, userId);
    };

    // –ï—Å–ª–∏ –º–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ç—ã—Ä–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
    if (!isOpen) return;

    return (
        <div className="modal">
            <div className='shift-modal cancel-modal'>
                <h2 className="consultation-modal__title">–û—Ç–º–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</h2>

                <button
                    className="consultation-modal__close"
                    onClick={onClose}
                >
                    X
                </button>

                <div className="shift-modal__information">
                    <p>–í—ã –æ—Ç–º–µ–Ω—è–µ—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é: {formatDateWithoutYear(consultationData.date)}, {consultationData.durationTime}</p>
                </div>

                {mode === "ADMIN" && (
                    <div className="shift-modal__client">
                        –ö–ª–∏–µ–Ω—Ç: {(!consultationData.PatientSurname && !consultationData.PatientName && !consultationData.PatientPatronymic)
                            ? <span>–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</span>
                            : <span>
                                {consultationData.PatientSurname} {consultationData.PatientName} {consultationData.PatientPatronymic ?? ""}, {consultationData.PatientPhone}
                            </span>
                        }
                    </div>
                )}

                {mode !== "ADMIN" && (
                    <>
                        <p className="consultation-modal__description">
                            –ï—Å–ª–∏ –≤–∞–º —É–¥–æ–±–Ω–æ, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–º–µ–Ω—ã (—ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ):
                        </p>

                        <div className="cancel-modal__reason">
                            <textarea
                                id="reasons"
                                placeholder='–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã'
                                value={reasons}
                                onChange={(e) => setReasons(e.target.value)}
                            />
                        </div>

                        <div className="cancel-modal__notification">
                            üîî –°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 3 –¥–Ω–µ–π.
                        </div>
                    </>
                )}

                <button
                    className='shift-modal__submit'
                    onClick={handleSubmit}
                >
                    –û—Ç–º–µ–Ω–∏—Ç—å
                </button>
            </div>
        </div>
    )
}

export default CancelModal;