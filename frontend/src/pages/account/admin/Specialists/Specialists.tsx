import { useState } from "react";
import { observer } from "mobx-react-lite";
import AccountLayout from "../../AccountLayout";
import BasicDataTab from "./BasicDataTab";
import ProfecionalDataTab from "./ProfecionalDataTab";
import Search from "../../../../components/UI/Search/Search";
import type { IBasicData, IProfData } from "../../../../models/IDatas";
import type { ITab } from "../../../../components/UI/Tabs/Tabs";
import Tabs from "../../../../components/UI/Tabs/Tabs";
import ShowError from "../../../../components/UI/ShowError/ShowError";
import './Specialists.scss';

type TabType = "basic" | "prof";
export interface DataTabProps {
    searchTerm: string;
    setError: (message: { id: number; message: string }) => void;
    setMessage: (message: { id: number; message: string }) => void;
}

const Specialists: React.FC = () => {
    const [activeTab, setActiveTab] = useState<TabType>("basic");
    const [searchTerm, setSearchTerm] = useState<string>("");
    const [showInfo, setShowInfo] = useState<boolean>(false);
    const [basicDatas, setBasicDatas] = useState<IBasicData[]>([]);
    const [profecionalDatas, setProfecionalDatas] = useState<IProfData[]>([]);
    const [message, setMessage] = useState<{ id: number; message: string }>({ id: 0, message: "" });
    const [error, setError] = useState<{ id: number; message: string }>({ id: 0, message: "" });

    // –í–∫–ª–∞–¥–∫–∏
    const tabs: ITab[] = [
        { name: "basic", label: "–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" },
        { name: "prof", label: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" }
    ];

    const handleInfoClick = () => {
        setShowInfo(!showInfo);
    };

    const infoContent = {
        basic: "–í —Ç–∞–±–ª–∏—Ü–µ ¬´–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ¬ª –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–Ω–µ—Å—ë–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º. –ö –Ω–∏–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è –§–ò–û, –ø–æ–ª –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è.",
        prof: "–í —Ç–∞–±–ª–∏—Ü–µ ¬´–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ¬ª –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–Ω–µ—Å—ë–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º. –ö –Ω–∏–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è –¥–∏–ø–ª–æ–º –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏, –ª–∏—Ü–µ–Ω–∑–∏—è –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è."
    };

    return (
        <AccountLayout>
            <ShowError msg={message} mode="MESSAGE" />
            <ShowError msg={error} />

            <div className="page-container admin-page">
                <h1 className="consultations-doctor__main-title info-title">
                    <span>
                        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                    </span>
                    <span
                        className="info-icon"
                        onClick={handleInfoClick}
                        title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–±–ª–∏—Ü–∞—Ö"
                    >
                        üõà
                    </span>
                </h1>

                {/* –í—Å–ø–ª—ã–≤–∞—é—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
                {showInfo && (
                    <div className="info-tooltip">
                        <div className="info-tooltip__content">
                            <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–±–ª–∏—Ü–∞—Ö</h3>
                            <p><strong>–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong> {infoContent.basic}</p>
                            <p><strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong> {infoContent.prof}</p>
                            <button
                                className="my-button"
                                onClick={() => setShowInfo(false)}
                            >
                                –ó–∞–∫—Ä—ã—Ç—å
                            </button>
                        </div>
                    </div>
                )}

                {/* –í–∫–ª–∞–¥–∫–∏ */}
                <Tabs
                    tabs={tabs}
                    activeTab={activeTab}
                    onTabChange={(tabName) => setActiveTab(tabName as TabType)}
                />

                {/* –ü–æ–∏—Å–∫ */}
                <Search
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ –§–ò–û, —Ç–µ–ª–µ—Ñ–æ–Ω—É, –ø–æ—á—Ç–µ"
                    value={searchTerm}
                    onChange={setSearchTerm}
                />

                {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
                <div className="edit-info__content">
                    {activeTab === "basic" && (
                        <BasicDataTab
                            basicDatas={basicDatas}
                            searchTerm={searchTerm}
                            setBasicDatas={setBasicDatas}
                            setError={setError}
                            setMessage={setMessage}
                        />
                    )}
                    {activeTab === "prof" && (
                        <ProfecionalDataTab
                            profecionalDatas={profecionalDatas}
                            searchTerm={searchTerm}
                            setProfecionalDatas={setProfecionalDatas}
                            setError={setError}
                            setMessage={setMessage}
                        />
                    )}
                </div>
            </div>
        </AccountLayout >
    );
};

export default observer(Specialists);