import { useContext, useEffect, useState } from "react";
import { Context } from "../../../main.js";
import { observer } from "mobx-react-lite";
import Loader from "../../../components/UI/Loader/Loader.js";
import ProfileWarnings from "./components/ProfileWarnings.js";
import UserProfile from "./UserProfile.js";
import UserProfileEdit from "./UserProfileEdit.js";
import type { IUserDataProfileEdit } from "../../../models/Auth.js";
import AccountLayout from "../../../pages/account/AccountLayout.js";
import DoctorInfo from "../DoctorInfo/DoctorInfo.js";
import "./MyProfile.scss";
import ShowError from "../../../components/UI/ShowError/ShowError.js";
import { useNavigate } from "react-router";
import { RouteNames } from "../../../routes/index.js";

const MyProfile: React.FC = () => {
    const { store } = useContext(Context);
    const navigate = useNavigate();

    const [isEditing, setIsEditing] = useState<boolean>(false);
    const [error, setError] = useState<{ id: number; message: string }>({ id: 0, message: "" });
    const [message, setMessage] = useState<{ id: number; message: string }>({ id: 0, message: "" });

    // Добавление фотографии
    const handleAddPhoto = async (e: React.ChangeEvent<HTMLInputElement>, changePhoto: (img: string) => void) => {
        if (e.target.files && e.target.files[0]) {
            const file = e.target.files[0];

            const formData = new FormData();
            formData.append('img', file);
            formData.append('userId', store.user.id.toString());

            await store.uploadAvatar(formData);
            changePhoto(store.user.img)
        }
    };

    // Удаление фотографии
    const handleRemovePhoto = async (changePhoto: (img: string) => void) => {
        await store.removeAvatar(store.user.id);
        changePhoto(store.user.img);
    };

    // Сохранение изменений
    const handleSave = async (ProfileData: IUserDataProfileEdit) => {
        setError({ id: Date.now(), message: "" });
        const data = await store.updateUserData(ProfileData, store.user.id);
        if (data.success) {
            setIsEditing(false);
            setMessage({ id: Date.now(), message: data.message })
        }
        else {
            setError({ id: Date.now(), message: data.message });
        }
    };

    useEffect(() => {
        setError({ id: Date.now(), message: "" });
    }, [isEditing])

    useEffect(() => {
        console.log("MY PROFILE")
    }, [])

    if (store.loading) return (
        <AccountLayout>
            <Loader />
        </AccountLayout>
    )

    return (
        <AccountLayout>
            <div className="user-profile">
                {isEditing && <div className="user-profile__title">Вы находитесь в режиме редактирования профиля</div>}
                <ShowError msg={error} className="user-profile__error" />
                <ShowError msg={message} mode="MESSAGE" className="user-profile__error" />
                <div className="user-profile__box">
                    <button
                        className="user-profile__back"
                        title="Вернуться"
                        onClick={() => {
                            const canGoBack = window.history.length > 1 && document.referrer;
                            if (canGoBack) {
                                navigate(-1);
                            } else {
                                navigate(RouteNames.HOME);
                            }
                        }}
                    >
                        <svg version="1.1"
                            xmlns="http://www.w3.org/2000/svg"
                            width="40"
                            height="40"
                            viewBox="0 0 512 512"
                        >
                            <path
                                d="M0 0 C7.60174263 6.27970043 13.70190465 13.28637997 14.875 23.375 C15.8652075 34.24747833 12.71389192 42.79986463 5.8515625 51.20703125 C4.19182498 53.02749434 2.49626585 54.77295347 0.75146484 56.51049805 C0.21242523 57.04781052 -0.32661438 57.58512299 -0.88198853 58.13871765 C-1.29218231 58.54669083 -1.7023761 58.954664 -2.125 59.375 C-0.65568307 59.37719984 -0.65568307 59.37719984 0.84331703 59.37944412 C24.76846563 59.41617304 48.69347569 59.47579662 72.61850929 59.55890274 C84.18887158 59.59857322 95.75916704 59.63102629 107.32958984 59.64599609 C117.42402353 59.65907512 127.51830941 59.6861976 137.61265981 59.72961307 C142.94879305 59.7520883 148.28474495 59.76791914 153.62092972 59.76688385 C196.39950776 59.76740804 196.39950776 59.76740804 213.875 64.375 C215.01682739 64.67193756 216.15865479 64.96887512 217.33508301 65.27481079 C219.83245251 65.96399778 222.24989825 66.74996348 224.6875 67.625 C225.96765991 68.06996826 225.96765991 68.06996826 227.27368164 68.52392578 C249.02292346 76.28818865 270.03068379 88.34236007 285.875 105.375 C287.1125 106.6125 287.1125 106.6125 288.375 107.875 C289.6125 109.1125 289.6125 109.1125 290.875 110.375 C291.39271973 110.8687915 291.91043945 111.36258301 292.44384766 111.87133789 C296.7489617 116.03531067 300.34143258 120.39507188 303.75 125.3125 C304.26393311 126.05048828 304.77786621 126.78847656 305.30737305 127.54882812 C317.30319011 145.03659374 325.7511154 163.79286074 330.875 184.375 C331.35646484 186.25832031 331.35646484 186.25832031 331.84765625 188.1796875 C340.44184624 226.65963453 332.08446593 270.44432561 311.66943359 303.81982422 C309.82026213 306.73102534 307.87346468 309.56463364 305.875 312.375 C305.48006348 312.93219727 305.08512695 313.48939453 304.67822266 314.06347656 C279.32700576 349.23689624 241.92646391 371.87338999 199.38134766 379.41699219 C189.97366673 380.83394656 180.54564523 380.70368738 171.05078125 380.7109375 C169.05307422 380.71737883 167.05536811 380.72410814 165.05766296 380.73110962 C160.89315604 380.74301438 156.72873169 380.74679704 152.56420898 380.74560547 C147.24843235 380.74540161 141.93318627 380.77280333 136.61753559 380.80714989 C132.50037736 380.82945425 128.38334671 380.83344207 124.26613426 380.83238602 C122.30666447 380.83473279 120.34719066 380.84350378 118.38778114 380.85905075 C105.30103101 380.95325424 94.623825 380.76290187 84.62890625 371.29296875 C77.82623398 363.85396634 75.39078272 355.94108198 75.62109375 345.9609375 C76.67075798 335.270511 81.51478484 328.40585174 89.16796875 321.20703125 C97.77316463 315.38331282 107.3132341 315.93423978 117.2734375 315.93359375 C118.87416775 315.92178879 120.47488712 315.9084171 122.07559204 315.89356995 C126.28008179 315.85752795 130.48447543 315.83724325 134.68908691 315.82202148 C193.22147289 316.01803451 193.22147289 316.01803451 242.4296875 286.94140625 C262.06798016 266.24984876 268.96118099 240.98058487 268.25390625 213.078125 C267.15899613 188.51644228 255.61208825 166.21536993 237.875 149.375 C223.55925065 136.77156559 204.98340005 128.41430169 186.01869202 126.25637817 C185.28763058 126.17263353 184.55656914 126.08888888 183.80335432 126.00260651 C175.37614334 125.11473597 166.97801449 125.10925153 158.51342773 125.14794922 C156.7473959 125.14851512 154.9813636 125.14819329 153.21533203 125.14706421 C148.47884394 125.14649668 143.74245973 125.15815242 139.00599551 125.17221212 C134.03460659 125.18482086 129.06321458 125.1858979 124.09181213 125.18826294 C114.7035827 125.19444818 105.31540053 125.21081847 95.92719179 125.23096192 C85.22809605 125.2534136 74.5289979 125.26433753 63.82988441 125.27435279 C41.84489668 125.29518773 19.85995133 125.33030545 -2.125 125.375 C-1.43792969 126.04756836 -0.75085938 126.72013672 -0.04296875 127.41308594 C0.85808594 128.30286133 1.75914062 129.19263672 2.6875 130.109375 C3.58082031 130.98819336 4.47414063 131.86701172 5.39453125 132.77246094 C12.77157124 140.51254423 15.38124812 148.41455657 15.1875 159.05859375 C14.32951317 168.16397898 9.64530179 175.92742476 3.02734375 182.09765625 C-5.20157159 188.75604302 -13.68757546 190.354383 -24.125 189.375 C-38.03567244 187.07906377 -48.43599555 173.37581186 -57.92578125 163.875 C-59.33419038 162.47048634 -60.74281968 161.06619343 -62.1516571 159.66210938 C-65.0873348 156.73385052 -68.01916402 153.80180348 -70.94848633 150.8671875 C-74.68999974 147.11986223 -78.44280166 143.38407141 -82.19877338 139.65124512 C-85.10460961 136.76017882 -88.00344892 133.86217456 -90.90035057 130.9621582 C-92.28101071 129.58200887 -93.66401329 128.20419845 -95.04946327 126.82885742 C-96.9872889 124.90345253 -98.91522586 122.96863505 -100.84106445 121.03125 C-101.68820511 120.19557495 -101.68820511 120.19557495 -102.55245972 119.34301758 C-110.14669551 111.64845106 -114.53549551 103.62071951 -114.5 92.625 C-114.40341665 82.40811074 -112.28198628 76.45484229 -105.30883789 68.94482422 C-104.82787438 68.42675642 -104.34691088 67.90868862 -103.85137272 67.3749218 C-97.86072936 60.96159929 -91.68383833 54.73006867 -85.49609375 48.5078125 C-84.86774187 47.87538509 -84.23938999 47.24295769 -83.59199715 46.59136581 C-80.27655065 43.25527972 -76.95799655 39.92232061 -73.63696289 36.59179688 C-70.23404261 33.17774927 -66.84298715 29.75215748 -63.45431423 26.32397652 C-60.81770443 23.66112585 -58.172155 21.00729139 -55.52418709 18.35573959 C-54.2702373 17.09695759 -53.01963079 15.83483493 -51.77264214 14.56915665 C-36.86886893 -0.54435949 -21.00631575 -10.92328419 0 0 Z "
                                transform="translate(146.125,67.625)"
                            />
                        </svg>
                    </button>
                    <div className={store.user.role !== "ADMIN" ? "user-profile__content" : "user-profile__admin"}>
                        {isEditing ? (
                            <UserProfileEdit
                                profileData={store.user}
                                onAddPhoto={handleAddPhoto}
                                onRemovePhoto={handleRemovePhoto}
                                onSave={handleSave}
                                onCancel={() => setIsEditing(false)}
                                role={store.user.role}
                            />
                        ) : (
                            <UserProfile
                                profileData={store.user}
                                onEdit={() => setIsEditing(true)}
                                onLogout={async () => await store.logout()}
                                mode="OWN"
                            />
                        )}
                    </div>
                    <ProfileWarnings />
                </div>
            </div>

            {store.user.role === "DOCTOR" && (
                <DoctorInfo
                    type="WRITE"
                    userId={store.user.id}
                />
            )}
        </AccountLayout>
    );
};

export default observer(MyProfile);