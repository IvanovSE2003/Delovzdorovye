import { useContext, useEffect, useState } from "react";
import './PatientInfo.scss';
import { Context } from "../../../main";
import { observer } from "mobx-react-lite";
import type { PatientData } from "../../../models/PatientData";
import Loader from "../../../components/UI/Loader/Loader";
import EditPatientForm from "../EditPatientForm/EditPatientForm";

const PatientInfo: React.FC = () => {
  const { store } = useContext(Context);
  const [patientData, setPatientData] = useState<PatientData>({} as PatientData);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [isEditing, setIsEditing] = useState<boolean>(false);

  useEffect(() => {
    const loadPatientData = async () => {
      try {
        setLoading(true);
        setError(null);

        if (!store.user?.id) {
          throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
        }
        const data = await store.getPatientData(store.user.id);
        setPatientData(data);
      } catch (err) {
        setError(err instanceof Error ? err.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞');
      } finally {
        setLoading(false);
      }
    };

    loadPatientData();
  }, [store, store.user?.id]);

  const handleEditClick = () => {
    setIsEditing(true);
  };

  const handleSave = async (updatedData: PatientData) => {
    console.log(updatedData);
    // await store.updatePatientData(store.user.id, updatedData);
    // setPatientData(updatedData);
    // setIsEditing(false);
  };

  if (loading) return <Loader />;
  if (error) return <div className="error">{error}</div>;
  if (!patientData) return <div>–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</div>;

  const { medicalData } = patientData;

  return (
    <div className="patient-card">
      {isEditing ? (
        <EditPatientForm
          patientData={patientData}
          onSave={handleSave}
          onCancel={() => setIsEditing(false)}
        />
      ) : (
        <>
          <div className="card-header">
            <h1>–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞</h1>
            <div className="subtitle">–ü–æ–ª–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
          </div>

          <div className="medical-sections">

            {/* –•–∏—Ä—É—Ä–≥–∏—è */}
            <div className="medical-section">
              <div className="section-header">
                <div className="section-icon">ü©∫</div>
                <h2 className="section-title">–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞</h2>
              </div>
              {medicalData.surgeries.length > 0 ? (
                medicalData.surgeries.map((surgery, index) => (
                  <div className="record" key={surgery.id}>
                    <div className="record-header">
                      <span className="record-number">–ó–∞–ø–∏—Å—å ‚Ññ{index + 1}</span>
                      <span className="record-date">{surgery.year}</span>
                    </div>
                    <div className="record-details">
                      <div className="detail-item">
                        <span className="detail-label">–ì–æ–¥:</span>
                        <span className="detail-value">{surgery.year}</span>
                      </div>
                      <div className="detail-item">
                        <span className="detail-label">–û–ø–∏—Å–∞–Ω–∏–µ:</span>
                        <span className={`detail-value ${!surgery.description ? "no-data" : ""}`}>
                          {surgery.description || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}
                        </span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
              )}
            </div>

            {/* –ê–ª–ª–µ—Ä–≥–∏–∏ */}
            <div className="medical-section">
              <div className="section-header">
                <div className="section-icon">‚ö†Ô∏è</div>
                <h2 className="section-title">–ê–ª–ª–µ—Ä–≥–∏–∏</h2>
              </div>
              {medicalData.allergies.length > 0 ? (
                medicalData.allergies.map((allergy, index) => (
                  <div className="record" key={allergy.id}>
                    <div className="record-header">
                      <span className="record-number">–ó–∞–ø–∏—Å—å ‚Ññ{index + 1}</span>
                    </div>
                    <div className="record-details">
                      <div className="detail-item">
                        <span className="detail-label">–¢–∏–ø:</span>
                        <span className="detail-value">{allergy.type || "–ù–µ —É–∫–∞–∑–∞–Ω"}</span>
                      </div>
                      <div className="detail-item">
                        <span className="detail-label">–û–ø–∏—Å–∞–Ω–∏–µ:</span>
                        <span className={`detail-value ${!allergy.description ? "no-data" : ""}`}>
                          {allergy.description || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}
                        </span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
              )}
            </div>

            {/* –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ */}
            <div className="medical-section">
              <div className="section-header">
                <div className="section-icon">üíä</div>
                <h2 className="section-title">–õ–µ–∫–∞—Ä—Å—Ç–≤–∞</h2>
              </div>
              {medicalData.medications.length > 0 ? (
                medicalData.medications.map((medication, index) => (
                  <div className="record" key={medication.id}>
                    <div className="record-header">
                      <span className="record-number">–ó–∞–ø–∏—Å—å ‚Ññ{index + 1}</span>
                    </div>
                    <div className="record-details">
                      <div className="detail-item">
                        <span className="detail-label">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                        <span className="detail-value">{medication.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
                      </div>
                      <div className="detail-item">
                        <span className="detail-label">–î–æ–∑–∏—Ä–æ–≤–∫–∞:</span>
                        <span className={`detail-value ${!medication.dosage ? "no-data" : ""}`}>
                          {medication.dosage || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}
                        </span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
              )}
            </div>

            {/* –û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è */}
            <div className="medical-section">
              <div className="section-header">
                <div className="section-icon">üîç</div>
                <h2 className="section-title">–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h2>
              </div>
              {medicalData.examinations.length > 0 ? (
                medicalData.examinations.map((examination, index) => (
                  <div className="record" key={examination.id}>
                    <div className="record-header">
                      <span className="record-number">–ó–∞–ø–∏—Å—å ‚Ññ{index + 1}</span>
                    </div>
                    <div className="record-details">
                      <div className="detail-item">
                        <span className="detail-label">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                        <span className="detail-value">{examination.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
                      </div>
                      <div className="detail-item">
                        <span className="detail-label">–§–∞–π–ª:</span>
                        <span className={`detail-value ${!examination.file ? "no-data" : ""}`}>
                          {examination.file || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}
                        </span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
              )}
            </div>

            {/* –ê–Ω–∞–ª–∏–∑—ã */}
            <div className="medical-section">
              <div className="section-header">
                <div className="section-icon">üß™</div>
                <h2 className="section-title">–ê–Ω–∞–ª–∏–∑—ã</h2>
              </div>
              {medicalData.analyses.length > 0 ? (
                medicalData.analyses.map((analyse, index) => (
                  <div className="record" key={analyse.id}>
                    <div className="record-header">
                      <span className="record-number">–ó–∞–ø–∏—Å—å ‚Ññ{index + 1}</span>
                    </div>
                    <div className="record-details">
                      <div className="detail-item">
                        <span className="detail-label">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                        <span className="detail-value">{analyse.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
                      </div>
                      <div className="detail-item">
                        <span className="detail-label">–§–∞–π–ª:</span>
                        <span className={`detail-value ${!analyse.file ? "no-data" : ""}`}>
                          {analyse.file || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}
                        </span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
              )}
            </div>
          </div>

          <div className="edit-btn">
            <button onClick={handleEditClick}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
          </div>
        </>
      )}
    </div>
  );
};

export default observer(PatientInfo);
